{"version":3,"file":"boids.js","sources":["../src/core/boid.js","../src/walls/wall.js","../src/walls/cubewall.js"],"sourcesContent":["import { Vector3, Euler } from 'three';\n// import CubeWall from './walls/cubewall';\n\nexport default function Boid(options = {}) {\n  const {\n    position = new Vector3(),\n    rotation = new Euler(),\n    velocity = new Vector3(),\n    goal = null,\n    worldWall = null,\n    neighborhoodRadius = 50,\n    maxSpeed = 4,\n    maxSteerForce = 0.1,\n    enableWalls = false,\n  } = options;\n\n  this.position = position;\n  this.velocity = velocity;\n  this.worldWall = worldWall;\n  this.goal = goal;\n  this.neighborhoodRadius = neighborhoodRadius;\n  this.maxSpeed = maxSpeed;\n  this.maxSteerForce = maxSteerForce;\n  this.enableWalls = enableWalls;\n  this.rotation = rotation;\n  this._acceleration = new Vector3();\n}\n\nBoid.prototype.setGoal = function(goal) {\n  if (goal.isVector3) {\n    this.goal = goal;\n  }\n};\n\nBoid.prototype.setWorldWall = function(wall) {\n  if (wall.isWall) {\n    this.worldWall = wall;\n  }\n};\n\nBoid.prototype.update = function(boids) {\n\n  if (this.enableWalls && this.worldWall && this.worldWall.isWall) {\n\n    const acc = this.worldWall.resultant(this.position);\n    // console.log(acc);\n    this._acceleration.add(acc);\n\n  }\n\n  if (Math.random() > 0.5) {\n    this.flock(boids);\n  }\n\n  this.move();\n\n  // TODO: use quaternion maybe better\n  this.rotation.y = Math.atan2(-this.velocity.z, this.velocity.x);\n  this.rotation.z = Math.asin(this.velocity.y / this.velocity.length());\n};\n\nBoid.prototype.flock = function(boids) {\n  if (this.goal) {\n    this._acceleration.add(this.reach(this.goal, 0.005));\n  }\n\n  this._acceleration.add(this.alignment(boids));\n  this._acceleration.add(this.cohesion(boids));\n  this._acceleration.add(this.separation(boids));\n};\n\nBoid.prototype.move = function() {\n  this.velocity.add(this._acceleration);\n\n  const l = this.velocity.length();\n\n  if (l > this.maxSpeed) {\n    this.velocity.divideScalar(l / this.maxSpeed);\n  }\n\n  this.position.add(this.velocity);\n  this._acceleration.set(0, 0, 0);\n};\n\n// TODO: use a Repulse class to implement\nBoid.prototype.repulse = function(target) {\n  const distance = this.position.distanceTo(target);\n\n  if (distance < 150) {\n    const steer = new Vector3();\n\n    steer.subVectors(this.position, target);\n    steer.multiplyScalar(0.5 / distance);\n\n    this._acceleration.add(steer);\n  }\n};\n\nBoid.prototype.reach = function(target, amount) {\n  const steer = new Vector3();\n\n  steer.subVectors(target, this.position);\n  steer.multiplyScalar(amount);\n\n  return steer;\n};\n\nBoid.prototype.alignment = function(boids) {\n  let boid = null;\n  const velSum = new Vector3();\n  let count = 0;\n\n  for (let i = 0, il = boids.length; i < il; i++) {\n    if (Math.random() > 0.6) continue;\n\n    boid = boids[i];\n\n    const distance = boid.position.distanceTo(this.position);\n\n    if (distance > 0 && distance <= this.neighborhoodRadius) {\n      velSum.add(boid.velocity);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    velSum.divideScalar(count);\n    const l = velSum.length();\n\n    if (l > this.maxSteerForce) {\n      velSum.divideScalar(l / this.maxSteerForce);\n    }\n  }\n  return velSum;\n};\n\nBoid.prototype.cohesion = function(boids) {\n  let boid = null;\n  let distance = 0;\n  const posSum = new Vector3();\n  const steer = new Vector3();\n  let count = 0;\n\n  for (let i = 0, il = boids.length; i < il; i++) {\n    if (Math.random() > 0.6) continue;\n\n    boid = boids[i];\n    distance = boid.position.distanceTo(this.position);\n\n    if (distance > 0 && distance <= this.neighborhoodRadius) {\n      posSum.add(boid.position);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    posSum.divideScalar(count);\n  }\n\n  steer.subVectors(posSum, this.position);\n\n  const l = steer.length();\n\n  if (l > this.maxSteerForce) {\n    steer.divideScalar(l / this.maxSteerForce);\n  }\n\n  return steer;\n};\n\n// this.checkBounds = function () {\n//   if (this.position.x > _width) this.position.x = -_width;\n//   if (this.position.x < -_width) this.position.x = _width;\n//   if (this.position.y > _height) this.position.y = -_height;\n//   if (this.position.y < -_height) this.position.y = _height;\n//   if (this.position.z > _depth) this.position.z = -_depth;\n//   if (this.position.z < -_depth) this.position.z = _depth;\n// }\n\nBoid.prototype.cohesion = function(boids) {\n\n  let boid = null;\n  let distance = 0;\n  const posSum = new Vector3();\n  const steer = new Vector3();\n  let count = 0;\n\n  for (let i = 0, il = boids.length; i < il; i++) {\n    if (Math.random() > 0.6) continue;\n\n    boid = boids[i];\n    distance = boid.position.distanceTo(this.position);\n\n    if (distance > 0 && distance <= this.neighborhoodRadius) {\n      posSum.add(boid.position);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    posSum.divideScalar(count);\n  }\n\n  steer.subVectors(posSum, this.position);\n\n  const l = steer.length();\n\n  if (l > this.maxSteerForce) {\n    steer.divideScalar(l / this.maxSteerForce);\n  }\n\n  return steer;\n};\n\nBoid.prototype.separation = function(boids) {\n  let boid = null;\n  let distance = 0;\n  const posSum = new Vector3();\n  const repulse = new Vector3();\n\n  for (let i = 0, il = boids.length; i < il; i++) {\n\n    if (Math.random() > 0.6) continue;\n\n    boid = boids[i];\n    distance = boid.position.distanceTo(this.position);\n\n    if (distance > 0 && distance <= this.neighborhoodRadius) {\n      repulse.subVectors(this.position, boid.position);\n      repulse.normalize();\n      repulse.divideScalar(distance);\n      posSum.add(repulse);\n    }\n  }\n\n  return posSum;\n};\n","\nexport default class Wall {\n  constructor() {\n    this.isWall = true;\n  }\n}\n\n","import { Vector3, Box3 } from 'three';\nimport Wall from './wall';\n\nexport default class CubeWall extends Wall {\n  constructor(min, max) {\n    super();\n\n    this.bounding = new Box3(min, max);\n\n    this._CMP = [ 'x', 'y', 'z' ];\n  }\n\n  resultant(position) {\n    const acceleration = new Vector3();\n    const vector = new Vector3();\n\n    for (let i = 0; i < 3; i++) {\n      const cmp = this._CMP[i];\n      vector.copy(position);\n      vector[cmp] = this.bounding.min[cmp];\n      acceleration.add(this.avoid(position, vector).multiplyScalar(5));\n      vector.copy(position);\n      vector[cmp] = this.bounding.max[cmp];\n      acceleration.add(this.avoid(position, vector).multiplyScalar(5));\n    }\n\n    return acceleration;\n  }\n\n  avoid(position, target) {\n    const steer = new Vector3();\n\n    steer.copy(position);\n    steer.sub(target);\n\n    steer.multiplyScalar(1 / steer.lengthSq());\n\n    return steer;\n  }\n}\n"],"names":["Boid","options","position","Vector3","rotation","Euler","velocity","goal","worldWall","neighborhoodRadius","maxSpeed","maxSteerForce","enableWalls","_acceleration","prototype","setGoal","isVector3","setWorldWall","wall","isWall","update","boids","acc","resultant","add","Math","random","flock","move","y","atan2","z","x","asin","length","reach","alignment","cohesion","separation","l","divideScalar","set","repulse","target","distance","distanceTo","steer","subVectors","multiplyScalar","amount","boid","velSum","count","i","il","posSum","normalize","Wall","CubeWall","min","max","bounding","Box3","_CMP","acceleration","vector","cmp","copy","avoid","sub","lengthSq"],"mappings":";;;;;;EACA;;AAEA,EAAe,SAASA,IAAT,GAA4B;EAAA,MAAdC,OAAc,uEAAJ,EAAI;EAAA,0BAWrCA,OAXqC,CAEvCC,QAFuC;EAAA,MAEvCA,QAFuC,qCAE5B,IAAIC,aAAJ,EAF4B;EAAA,0BAWrCF,OAXqC,CAGvCG,QAHuC;EAAA,MAGvCA,QAHuC,qCAG5B,IAAIC,WAAJ,EAH4B;EAAA,0BAWrCJ,OAXqC,CAIvCK,QAJuC;EAAA,MAIvCA,QAJuC,qCAI5B,IAAIH,aAAJ,EAJ4B;EAAA,sBAWrCF,OAXqC,CAKvCM,IALuC;EAAA,MAKvCA,IALuC,iCAKhC,IALgC;EAAA,2BAWrCN,OAXqC,CAMvCO,SANuC;EAAA,MAMvCA,SANuC,sCAM3B,IAN2B;EAAA,8BAWrCP,OAXqC,CAOvCQ,kBAPuC;EAAA,MAOvCA,kBAPuC,yCAOlB,EAPkB;EAAA,0BAWrCR,OAXqC,CAQvCS,QARuC;EAAA,MAQvCA,QARuC,qCAQ5B,CAR4B;EAAA,8BAWrCT,OAXqC,CASvCU,aATuC;EAAA,MASvCA,aATuC,yCASvB,GATuB;EAAA,6BAWrCV,OAXqC,CAUvCW,WAVuC;EAAA,MAUvCA,WAVuC,wCAUzB,KAVyB;;;EAazC,OAAKV,QAAL,GAAgBA,QAAhB;EACA,OAAKI,QAAL,GAAgBA,QAAhB;EACA,OAAKE,SAAL,GAAiBA,SAAjB;EACA,OAAKD,IAAL,GAAYA,IAAZ;EACA,OAAKE,kBAAL,GAA0BA,kBAA1B;EACA,OAAKC,QAAL,GAAgBA,QAAhB;EACA,OAAKC,aAAL,GAAqBA,aAArB;EACA,OAAKC,WAAL,GAAmBA,WAAnB;EACA,OAAKR,QAAL,GAAgBA,QAAhB;EACA,OAAKS,aAAL,GAAqB,IAAIV,aAAJ,EAArB;EACD;;EAEDH,KAAKc,SAAL,CAAeC,OAAf,GAAyB,UAASR,IAAT,EAAe;EACtC,MAAIA,KAAKS,SAAT,EAAoB;EAClB,SAAKT,IAAL,GAAYA,IAAZ;EACD;EACF,CAJD;;EAMAP,KAAKc,SAAL,CAAeG,YAAf,GAA8B,UAASC,IAAT,EAAe;EAC3C,MAAIA,KAAKC,MAAT,EAAiB;EACf,SAAKX,SAAL,GAAiBU,IAAjB;EACD;EACF,CAJD;;EAMAlB,KAAKc,SAAL,CAAeM,MAAf,GAAwB,UAASC,KAAT,EAAgB;;EAEtC,MAAI,KAAKT,WAAL,IAAoB,KAAKJ,SAAzB,IAAsC,KAAKA,SAAL,CAAeW,MAAzD,EAAiE;;EAE/D,QAAMG,MAAM,KAAKd,SAAL,CAAee,SAAf,CAAyB,KAAKrB,QAA9B,CAAZ;EACA;EACA,SAAKW,aAAL,CAAmBW,GAAnB,CAAuBF,GAAvB;EAED;;EAED,MAAIG,KAAKC,MAAL,KAAgB,GAApB,EAAyB;EACvB,SAAKC,KAAL,CAAWN,KAAX;EACD;;EAED,OAAKO,IAAL;;EAEA;EACA,OAAKxB,QAAL,CAAcyB,CAAd,GAAkBJ,KAAKK,KAAL,CAAW,CAAC,KAAKxB,QAAL,CAAcyB,CAA1B,EAA6B,KAAKzB,QAAL,CAAc0B,CAA3C,CAAlB;EACA,OAAK5B,QAAL,CAAc2B,CAAd,GAAkBN,KAAKQ,IAAL,CAAU,KAAK3B,QAAL,CAAcuB,CAAd,GAAkB,KAAKvB,QAAL,CAAc4B,MAAd,EAA5B,CAAlB;EACD,CAnBD;;EAqBAlC,KAAKc,SAAL,CAAea,KAAf,GAAuB,UAASN,KAAT,EAAgB;EACrC,MAAI,KAAKd,IAAT,EAAe;EACb,SAAKM,aAAL,CAAmBW,GAAnB,CAAuB,KAAKW,KAAL,CAAW,KAAK5B,IAAhB,EAAsB,KAAtB,CAAvB;EACD;;EAED,OAAKM,aAAL,CAAmBW,GAAnB,CAAuB,KAAKY,SAAL,CAAef,KAAf,CAAvB;EACA,OAAKR,aAAL,CAAmBW,GAAnB,CAAuB,KAAKa,QAAL,CAAchB,KAAd,CAAvB;EACA,OAAKR,aAAL,CAAmBW,GAAnB,CAAuB,KAAKc,UAAL,CAAgBjB,KAAhB,CAAvB;EACD,CARD;;EAUArB,KAAKc,SAAL,CAAec,IAAf,GAAsB,YAAW;EAC/B,OAAKtB,QAAL,CAAckB,GAAd,CAAkB,KAAKX,aAAvB;;EAEA,MAAM0B,IAAI,KAAKjC,QAAL,CAAc4B,MAAd,EAAV;;EAEA,MAAIK,IAAI,KAAK7B,QAAb,EAAuB;EACrB,SAAKJ,QAAL,CAAckC,YAAd,CAA2BD,IAAI,KAAK7B,QAApC;EACD;;EAED,OAAKR,QAAL,CAAcsB,GAAd,CAAkB,KAAKlB,QAAvB;EACA,OAAKO,aAAL,CAAmB4B,GAAnB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;EACD,CAXD;;EAaA;EACAzC,KAAKc,SAAL,CAAe4B,OAAf,GAAyB,UAASC,MAAT,EAAiB;EACxC,MAAMC,WAAW,KAAK1C,QAAL,CAAc2C,UAAd,CAAyBF,MAAzB,CAAjB;;EAEA,MAAIC,WAAW,GAAf,EAAoB;EAClB,QAAME,QAAQ,IAAI3C,aAAJ,EAAd;;EAEA2C,UAAMC,UAAN,CAAiB,KAAK7C,QAAtB,EAAgCyC,MAAhC;EACAG,UAAME,cAAN,CAAqB,MAAMJ,QAA3B;;EAEA,SAAK/B,aAAL,CAAmBW,GAAnB,CAAuBsB,KAAvB;EACD;EACF,CAXD;;EAaA9C,KAAKc,SAAL,CAAeqB,KAAf,GAAuB,UAASQ,MAAT,EAAiBM,MAAjB,EAAyB;EAC9C,MAAMH,QAAQ,IAAI3C,aAAJ,EAAd;;EAEA2C,QAAMC,UAAN,CAAiBJ,MAAjB,EAAyB,KAAKzC,QAA9B;EACA4C,QAAME,cAAN,CAAqBC,MAArB;;EAEA,SAAOH,KAAP;EACD,CAPD;;EASA9C,KAAKc,SAAL,CAAesB,SAAf,GAA2B,UAASf,KAAT,EAAgB;EACzC,MAAI6B,OAAO,IAAX;EACA,MAAMC,SAAS,IAAIhD,aAAJ,EAAf;EACA,MAAIiD,QAAQ,CAAZ;;EAEA,OAAK,IAAIC,IAAI,CAAR,EAAWC,KAAKjC,MAAMa,MAA3B,EAAmCmB,IAAIC,EAAvC,EAA2CD,GAA3C,EAAgD;EAC9C,QAAI5B,KAAKC,MAAL,KAAgB,GAApB,EAAyB;;EAEzBwB,WAAO7B,MAAMgC,CAAN,CAAP;;EAEA,QAAMT,WAAWM,KAAKhD,QAAL,CAAc2C,UAAd,CAAyB,KAAK3C,QAA9B,CAAjB;;EAEA,QAAI0C,WAAW,CAAX,IAAgBA,YAAY,KAAKnC,kBAArC,EAAyD;EACvD0C,aAAO3B,GAAP,CAAW0B,KAAK5C,QAAhB;EACA8C;EACD;EACF;;EAED,MAAIA,QAAQ,CAAZ,EAAe;EACbD,WAAOX,YAAP,CAAoBY,KAApB;EACA,QAAMb,IAAIY,OAAOjB,MAAP,EAAV;;EAEA,QAAIK,IAAI,KAAK5B,aAAb,EAA4B;EAC1BwC,aAAOX,YAAP,CAAoBD,IAAI,KAAK5B,aAA7B;EACD;EACF;EACD,SAAOwC,MAAP;EACD,CA3BD;;EA6BAnD,KAAKc,SAAL,CAAeuB,QAAf,GAA0B,UAAShB,KAAT,EAAgB;EACxC,MAAI6B,OAAO,IAAX;EACA,MAAIN,WAAW,CAAf;EACA,MAAMW,SAAS,IAAIpD,aAAJ,EAAf;EACA,MAAM2C,QAAQ,IAAI3C,aAAJ,EAAd;EACA,MAAIiD,QAAQ,CAAZ;;EAEA,OAAK,IAAIC,IAAI,CAAR,EAAWC,KAAKjC,MAAMa,MAA3B,EAAmCmB,IAAIC,EAAvC,EAA2CD,GAA3C,EAAgD;EAC9C,QAAI5B,KAAKC,MAAL,KAAgB,GAApB,EAAyB;;EAEzBwB,WAAO7B,MAAMgC,CAAN,CAAP;EACAT,eAAWM,KAAKhD,QAAL,CAAc2C,UAAd,CAAyB,KAAK3C,QAA9B,CAAX;;EAEA,QAAI0C,WAAW,CAAX,IAAgBA,YAAY,KAAKnC,kBAArC,EAAyD;EACvD8C,aAAO/B,GAAP,CAAW0B,KAAKhD,QAAhB;EACAkD;EACD;EACF;;EAED,MAAIA,QAAQ,CAAZ,EAAe;EACbG,WAAOf,YAAP,CAAoBY,KAApB;EACD;;EAEDN,QAAMC,UAAN,CAAiBQ,MAAjB,EAAyB,KAAKrD,QAA9B;;EAEA,MAAMqC,IAAIO,MAAMZ,MAAN,EAAV;;EAEA,MAAIK,IAAI,KAAK5B,aAAb,EAA4B;EAC1BmC,UAAMN,YAAN,CAAmBD,IAAI,KAAK5B,aAA5B;EACD;;EAED,SAAOmC,KAAP;EACD,CAhCD;;EAkCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA9C,KAAKc,SAAL,CAAeuB,QAAf,GAA0B,UAAShB,KAAT,EAAgB;;EAExC,MAAI6B,OAAO,IAAX;EACA,MAAIN,WAAW,CAAf;EACA,MAAMW,SAAS,IAAIpD,aAAJ,EAAf;EACA,MAAM2C,QAAQ,IAAI3C,aAAJ,EAAd;EACA,MAAIiD,QAAQ,CAAZ;;EAEA,OAAK,IAAIC,IAAI,CAAR,EAAWC,KAAKjC,MAAMa,MAA3B,EAAmCmB,IAAIC,EAAvC,EAA2CD,GAA3C,EAAgD;EAC9C,QAAI5B,KAAKC,MAAL,KAAgB,GAApB,EAAyB;;EAEzBwB,WAAO7B,MAAMgC,CAAN,CAAP;EACAT,eAAWM,KAAKhD,QAAL,CAAc2C,UAAd,CAAyB,KAAK3C,QAA9B,CAAX;;EAEA,QAAI0C,WAAW,CAAX,IAAgBA,YAAY,KAAKnC,kBAArC,EAAyD;EACvD8C,aAAO/B,GAAP,CAAW0B,KAAKhD,QAAhB;EACAkD;EACD;EACF;;EAED,MAAIA,QAAQ,CAAZ,EAAe;EACbG,WAAOf,YAAP,CAAoBY,KAApB;EACD;;EAEDN,QAAMC,UAAN,CAAiBQ,MAAjB,EAAyB,KAAKrD,QAA9B;;EAEA,MAAMqC,IAAIO,MAAMZ,MAAN,EAAV;;EAEA,MAAIK,IAAI,KAAK5B,aAAb,EAA4B;EAC1BmC,UAAMN,YAAN,CAAmBD,IAAI,KAAK5B,aAA5B;EACD;;EAED,SAAOmC,KAAP;EACD,CAjCD;;EAmCA9C,KAAKc,SAAL,CAAewB,UAAf,GAA4B,UAASjB,KAAT,EAAgB;EAC1C,MAAI6B,OAAO,IAAX;EACA,MAAIN,WAAW,CAAf;EACA,MAAMW,SAAS,IAAIpD,aAAJ,EAAf;EACA,MAAMuC,UAAU,IAAIvC,aAAJ,EAAhB;;EAEA,OAAK,IAAIkD,IAAI,CAAR,EAAWC,KAAKjC,MAAMa,MAA3B,EAAmCmB,IAAIC,EAAvC,EAA2CD,GAA3C,EAAgD;;EAE9C,QAAI5B,KAAKC,MAAL,KAAgB,GAApB,EAAyB;;EAEzBwB,WAAO7B,MAAMgC,CAAN,CAAP;EACAT,eAAWM,KAAKhD,QAAL,CAAc2C,UAAd,CAAyB,KAAK3C,QAA9B,CAAX;;EAEA,QAAI0C,WAAW,CAAX,IAAgBA,YAAY,KAAKnC,kBAArC,EAAyD;EACvDiC,cAAQK,UAAR,CAAmB,KAAK7C,QAAxB,EAAkCgD,KAAKhD,QAAvC;EACAwC,cAAQc,SAAR;EACAd,cAAQF,YAAR,CAAqBI,QAArB;EACAW,aAAO/B,GAAP,CAAWkB,OAAX;EACD;EACF;;EAED,SAAOa,MAAP;EACD,CAtBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCrNqBE,OACnB,gBAAc;EAAA;;EACZ,OAAKtC,MAAL,GAAc,IAAd;EACD;;MCDkBuC;;;EACnB,oBAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;EAAA;;EAAA;;EAGpB,UAAKC,QAAL,GAAgB,IAAIC,UAAJ,CAASH,GAAT,EAAcC,GAAd,CAAhB;;EAEA,UAAKG,IAAL,GAAY,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAZ;EALoB;EAMrB;;;;gCAES7D,UAAU;EAClB,UAAM8D,eAAe,IAAI7D,aAAJ,EAArB;EACA,UAAM8D,SAAS,IAAI9D,aAAJ,EAAf;;EAEA,WAAK,IAAIkD,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;EAC1B,YAAMa,MAAM,KAAKH,IAAL,CAAUV,CAAV,CAAZ;EACAY,eAAOE,IAAP,CAAYjE,QAAZ;EACA+D,eAAOC,GAAP,IAAc,KAAKL,QAAL,CAAcF,GAAd,CAAkBO,GAAlB,CAAd;EACAF,qBAAaxC,GAAb,CAAiB,KAAK4C,KAAL,CAAWlE,QAAX,EAAqB+D,MAArB,EAA6BjB,cAA7B,CAA4C,CAA5C,CAAjB;EACAiB,eAAOE,IAAP,CAAYjE,QAAZ;EACA+D,eAAOC,GAAP,IAAc,KAAKL,QAAL,CAAcD,GAAd,CAAkBM,GAAlB,CAAd;EACAF,qBAAaxC,GAAb,CAAiB,KAAK4C,KAAL,CAAWlE,QAAX,EAAqB+D,MAArB,EAA6BjB,cAA7B,CAA4C,CAA5C,CAAjB;EACD;;EAED,aAAOgB,YAAP;EACD;;;4BAEK9D,UAAUyC,QAAQ;EACtB,UAAMG,QAAQ,IAAI3C,aAAJ,EAAd;;EAEA2C,YAAMqB,IAAN,CAAWjE,QAAX;EACA4C,YAAMuB,GAAN,CAAU1B,MAAV;;EAEAG,YAAME,cAAN,CAAqB,IAAIF,MAAMwB,QAAN,EAAzB;;EAEA,aAAOxB,KAAP;EACD;;;IAnCmCW;;;;;;;;;;;;;"}